{"version":3,"sources":["components/Logo.js","components/Header.js","components/actions/Like.js","components/actions/Dislike.js","components/actions/Superlike.js","components/actions/Rewind.js","components/Actions.js","components/Person.js","components/LikedPerson.js","components/Lonely.js","App.js","serviceWorker.js","index.js"],"names":["Logo","src","alt","Header","className","type","Like","userId","modifyChoices","onClick","Dislike","Superlike","Rewind","Actions","person","id","Person","name","desc","age","image","LikedPerson","Lonely","activeUserImage","likedUsers","superLikedUsers","length","map","item","key","App","useState","data","people","setPeople","setSuperLikedUsers","setLikedUsers","dislikedUsers","setDislikedUsers","removePerson","peopleDataSrc","filter","user","action","newPeople","newSuperLikedUsers","newLikedUsers","newDisLikedUsers","console","log","JSON","stringify","includes","push","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4a3863f7.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Logo = () => (\n  <div>\n    <img src=\"/images/app/logo.png\" alt=\"Tinder Logo\" />\n  </div>\n);\n\nexport default Logo;\n","import React from \"react\";\nimport Logo from \"./Logo\";\n\nconst Header = () => (\n  <header>\n    <div className=\"fl\">\n      <button type=\"button\">\n        <img src=\"/images/app/user.png\" alt=\"User Settings\"></img>\n      </button>\n    </div>\n\n    <div>\n      <Logo />\n    </div>\n\n    <div className=\"fl\">\n      <button type=\"button\">\n        <img src=\"/images/app/messages.png\" alt=\"View Messages\"></img>\n      </button>\n    </div>\n  </header>\n);\n\nexport default Header;\n","import React from \"react\";\n\nconst Like = ({ userId, modifyChoices }) => (\n  <button\n    type=\"button\"\n    onClick={() => modifyChoices(userId, \"ADD_TO_LIKED_USERS\")}\n  >\n    <img src=\"/images/app/like.png\" alt=\"like\" />\n  </button>\n);\nexport default Like;\n","import React from \"react\";\n\nconst Dislike = ({ userId, modifyChoices }) => (\n  <button\n    type=\"button\"\n    onClick={() => modifyChoices(userId, \"ADD_TO_DISLIKED_USERS\")}\n  >\n    <img src=\"/images/app/dislike.png\" alt=\"dislike\" />\n  </button>\n);\n\nexport default Dislike;\n","import React from \"react\";\n\nconst Superlike = ({ userId, modifyChoices }) => (\n  <button\n    type=\"button\"\n    onClick={() => modifyChoices(userId, \"ADD_TO_SUPERLIKED_USERS\")}\n  >\n    <img src=\"/images/app/superlike.png\" alt=\"superlike\" />\n  </button>\n);\n\nexport default Superlike;\n","import React from \"react\";\n\nconst Rewind = ({ userId, modifyChoices }) => (\n  <button type=\"button\">\n    <img src=\"/images/app/rewind.png\" alt=\"rewind\" />\n  </button>\n);\n\nexport default Rewind;\n","import React from \"react\";\nimport Like from \"./actions/Like\";\nimport Dislike from \"./actions/Dislike\";\nimport Superlike from \"./actions/Superlike\";\nimport Rewind from \"./actions/Rewind\";\n\nconst Actions = ({ person, modifyChoices }) => (\n  <div id=\"actions\">\n    <Rewind userId={person.id} />\n    <Dislike userId={person.id} modifyChoices={modifyChoices} />\n    <Like userId={person.id} modifyChoices={modifyChoices} />\n    <Superlike userId={person.id} modifyChoices={modifyChoices} />\n  </div>\n);\n\nexport default Actions;\n","import React from \"react\";\nimport Actions from \"./Actions\";\n\nconst Person = ({ person, modifyChoices }) => {\n  const { name, desc, age, image } = person;\n\n  return (\n    <>\n      <div className=\"person\">\n        <div className=\"person-photo\">\n          <img src={`/images/users/${image}`} alt={name}></img>\n        </div>\n        <div className=\"person-description\">\n          <p className=\"person-name-age\">\n            {name}, <span>{age}</span>\n          </p>\n          <p className=\"person-info\">{desc}</p>\n        </div>\n      </div>\n      <Actions person={person} modifyChoices={modifyChoices} />\n    </>\n  );\n};\n\nexport default Person;\n","import React from \"react\";\n\nconst LikedPerson = ({ person }) => (\n  <div className=\"liked-person\">\n    <div className=\"liked-person-image\">\n      <img\n        src={`/images/users/${person.image}`}\n        alt={`you liked ${person.name}`}\n      ></img>\n    </div>\n  </div>\n);\n\nexport default LikedPerson;\n","import React from \"react\";\nimport LikedPerson from \"./LikedPerson\";\n\nconst Lonely = ({ activeUserImage, likedUsers, superLikedUsers }) => (\n  <div id=\"lonely\">\n    <p>There's no new around you.</p>\n    <span className=\"pulse\">\n      <img src={`/images/users/${activeUserImage}`} alt=\"You...\" />\n    </span>\n    <div id=\"liked-people\">\n      <p>\n        {likedUsers.length > 0\n          ? \"People you liked...let's hope they like you too!\"\n          : \"\"}\n      </p>\n      {likedUsers.map(item => (\n        <LikedPerson key={item.id} person={item} />\n      ))}\n      <p>{superLikedUsers.length > 0 ? \"People you super liked!\" : \"\"}</p>\n      {superLikedUsers.map(item => (\n        <LikedPerson key={item.id} person={item} />\n      ))}\n    </div>\n  </div>\n);\nexport default Lonely;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport Person from \"./components/Person\";\nimport Lonely from \"./components/Lonely\";\nimport data from \"./data.json\";\n\nconst App = () => {\n  const [people, setPeople] = useState(data);\n  const [superLikedUsers, setSuperLikedUsers] = useState([]);\n  const [likedUsers, setLikedUsers] = useState([]);\n  const [dislikedUsers, setDislikedUsers] = useState([]);\n  const activeUser = 0;\n\n  const removePerson = (peopleDataSrc, userId) => {\n    peopleDataSrc = peopleDataSrc.filter(user => user.id !== userId);\n    return peopleDataSrc;\n  };\n\n  const modifyChoices = (userId, action) => {\n    const newPeople = [...people];\n    const newSuperLikedUsers = [...superLikedUsers];\n    const newLikedUsers = [...likedUsers];\n    const newDisLikedUsers = [...dislikedUsers];\n\n    switch (action) {\n      case \"ADD_TO_LIKED_USERS\":\n        console.log(\"here in like \");\n        console.log(\"people : \" + JSON.stringify(people));\n        console.log(\"active user : \" + JSON.stringify(people[activeUser]));\n        console.log(\"new people : \" + JSON.stringify(newPeople));\n\n        if (!people[activeUser].likedUsers.includes(userId)) {\n          newPeople[activeUser].likedUsers.push(userId);\n          newLikedUsers.push(data[userId]);\n          console.log(\"new liked people  : \" + JSON.stringify(newLikedUsers));\n\n          setLikedUsers(newLikedUsers);\n          setPeople(removePerson(people, userId));\n          console.log(\"people after  : \" + JSON.stringify(people));\n        }\n        break;\n      case \"ADD_TO_DISLIKED_USERS\":\n        if (!people[activeUser].dislikedUsers.includes(userId)) {\n          newPeople[activeUser].dislikedUsers.push(userId);\n          newDisLikedUsers.push(data[userId]);\n\n          setDislikedUsers(newDisLikedUsers);\n          setPeople(removePerson(people, userId));\n        }\n        break;\n      case \"ADD_TO_SUPERLIKED_USERS\":\n        if (!people[activeUser].superLikedUsers.includes(userId)) {\n          newPeople[activeUser].superLikedUsers.push(userId);\n          newSuperLikedUsers.push(data[userId]);\n\n          setSuperLikedUsers(newSuperLikedUsers);\n          setPeople(removePerson(people, userId));\n        }\n        break;\n      default:\n        return people;\n    }\n  };\n  // console.log(\"people:\" + JSON.stringify(people[1]));\n  return (\n    <div className=\"App\">\n      <Header />\n\n      {people[1] ? (\n        <Person\n          key={people[1].id}\n          person={people[1]}\n          modifyChoices={modifyChoices}\n          likedUsers={likedUsers}\n        />\n      ) : (\n        <Lonely\n          activeUserImage={people[activeUser].image}\n          likedUsers={likedUsers}\n          superLikedUsers={superLikedUsers}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}